from os.path import join


_faa = join('prodigal', fn + '.faa')
_gff = '%s.gff' % tool_output
_daa_90 = '%s_uniref90.daa' % tool_output
_sam_90 = '%s_uniref90.sam' % tool_output
_unmatched_90 = '%s_uniref90_unmatched.faa' % tool_output
_daa_50 = '%s_uniref50.daa' % tool_output
_sam_50 = '%s_uniref50.sam' % tool_output


rule protein:
    '''Annotate the proteins with Diamond cascading search against UniRef50/90.'''
    input:
        _sam_50, _sam_90
    output:
        _gff
    run:
        shell('touch {output[0]}')

# rule diamond_uniref90_index:
#     input:
#         ''
#     output:
#         tool_config['db']
#     shell:
#         'diamond makedb --in uniref90.fasta.gz --db uniref90'

rule diamond_blastp_uniref90:
    '''Homologous search UniRef90 with Diamond blastp.'''
    input:
        db = join(tool_config['db'], 'uniref90.dmnd'),
        faa = _faa
    output:
        daa = _daa_90
    params:
        tool_config['params']
    threads:
        tool_config['threads']
    log:
        '%s.log' % _daa_90
    priority:
        tool_config['priority']
    shell:
        'diamond blastp {params} --threads {threads}'
        ' --db {input.db} -q {input.faa} -a {output.daa} &> {log}'

rule diamond_view:
    '''Convert Diamond daa file to SAM file.'''
    input:
        daa = '{fn}.daa'
    output:
        sam = '{fn}.sam'
    shell:
        'diamond view --outfmt sam --out {output.sam} --daa {input.daa}'

rule unmatched_uniref90:
    '''Filter out the proteins that don't hit UniRef90'''
    input:
        faa = _faa,
        sam = _sam_90
    output:
        _unmatched_90
    run:
        shell('touch {output[0]}')

rule diamond_blastp_uniref50:
    '''Homologous search UniRef50 with Diamond blastp.'''
    input:
        db = join(tool_config['db'], 'uniref50.dmnd'),
        faa = _unmatched_90
    output:
        daa = _daa_50
    params:
        tool_config['params']
    threads:
        tool_config['threads']
    log:
        '%s.log' % _daa_50
    shell:
        'diamond blastp {params} --threads {threads}'
        ' --db {input.db} -q {input.faa} -a {output.daa} &> {log}'
