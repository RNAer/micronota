from micronota.parsers.cds import parse_diamond_uniref
from micronota.util import _filter_sequence_ids


rule diamond_uniref50:
    '''Homologous search UniRef90 with Diamond blastp.'''
    input:
        db = rule_config['db'],
        faa = rule_config['input']
    output:
        protected('diamond_uniref50.m12')
    log:
        'diamond_uniref50.log'
    priority:
        rule_config['priority']
    params:
        rule_config['params']
    threads:
        rule_config['threads']
    shell:
        'diamond blastp {params} --threads {threads}'
        ' --db {input.db} -q {input.faa} -o {output[0]}'
        ' --outfmt 6 qseqid qlen sseqid slen pident length gaps'
        ' evalue bitscore qstart qend sstart send &> {log}'

rule unmatched_uniref50:
    '''Filter out the proteins that don't hit UniRef90'''
    input:
        rule_config['input'],
        'diamond_uniref50.m12'
    output:
        faa = rule_config['output'] + '.faa',
        hit = rule_config['output'] + '.hit',
    run:
        df = parse_diamond_uniref(pident=50, fn='diamond_uniref50.m12')()
        df.columns = ['query', 'uniprot']
        df.to_csv(output.hit, sep='\t', index=False)
        _filter_sequence_ids(input[0], output.faa, df.uniprot)
